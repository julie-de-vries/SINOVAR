/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import com.sun.glass.events.KeyEvent;
import java.awt.BorderLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import nf.*;

/**
 *
 * @author Julie
 */
public class Accueil extends javax.swing.JFrame {

    private ArrayList<Patient> searchResult;
    private Controler controler;
    private AgendaPanel ap;
    private DMR dmr;

    /**
     * Creates new form Accueil
     */
    public Accueil(Controler controler) {
        this.controler=controler;
        String titreDePage = "Sinovar";
        this.setTitle(titreDePage);
        initComponents();
        add(new AgendaPanel(controler));
        controler.setAccueil(this);
    }
    
    public Accueil(){
        String titreDePage = "Sinovar";
        this.setTitle(titreDePage);
        initComponents();
        add(new AgendaPanel(controler));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        SecondPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        PatientSearchPanel = new javax.swing.JPanel();
        DMRLabel = new javax.swing.JLabel();
        SearchPatientField = new javax.swing.JTextField();
        SearchPatientButton = new javax.swing.JButton();
        ScrollDMR = new javax.swing.JScrollPane();
        DMRTable = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(858, 331));

        SecondPanel.setPreferredSize(new java.awt.Dimension(615, 331));
        SecondPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(247, 250, 253));
        jPanel1.setMinimumSize(new java.awt.Dimension(615, 331));
        jPanel1.setPreferredSize(new java.awt.Dimension(615, 360));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        SecondPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        PatientSearchPanel.setBackground(new java.awt.Color(196, 222, 231));
        PatientSearchPanel.setForeground(new java.awt.Color(247, 250, 253));
        PatientSearchPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PatientSearchPanel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        PatientSearchPanel.setMinimumSize(new java.awt.Dimension(230, 331));
        PatientSearchPanel.setPreferredSize(new java.awt.Dimension(230, 360));

        DMRLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DMRLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DMRLabel.setText("CONSULTER UN DMR");

        SearchPatientField.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        SearchPatientField.setText("Rechercher un DMR");
        SearchPatientField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchPatientFieldMouseClicked(evt);
            }
        });
        SearchPatientField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPatientFieldActionPerformed(evt);
            }
        });
        SearchPatientField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchPatientFieldKeyPressed(evt);
            }
        });

        SearchPatientButton.setBackground(new java.awt.Color(196, 222, 231));
        SearchPatientButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchPatientButtonMouseClicked(evt);
            }
        });
        SearchPatientButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchPatientButtonMouseClicked(evt);
            }
        });
        SearchPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPatientButtonActionPerformed(evt);
            }
        });

        DMRTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DMRTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Effectuez une recherche", null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nom", "Identifiant"
            }
        ));
        DMRTable.setColumnSelectionAllowed(true);
        DMRTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DMRTableMouseClicked(evt);
            }
        });
        DMRTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DMRTableKeyPressed(evt);
            }
        });
        ScrollDMR.setViewportView(DMRTable);
        DMRTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout PatientSearchPanelLayout = new javax.swing.GroupLayout(PatientSearchPanel);
        PatientSearchPanel.setLayout(PatientSearchPanelLayout);
        PatientSearchPanelLayout.setHorizontalGroup(
            PatientSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientSearchPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(PatientSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientSearchPanelLayout.createSequentialGroup()
                        .addComponent(ScrollDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PatientSearchPanelLayout.createSequentialGroup()
                        .addGroup(PatientSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PatientSearchPanelLayout.createSequentialGroup()
                                .addComponent(SearchPatientField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SearchPatientButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(DMRLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );
        PatientSearchPanelLayout.setVerticalGroup(
            PatientSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PatientSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchPatientButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SearchPatientField))
                .addGap(18, 18, 18)
                .addComponent(DMRLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollDMR, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        SecondPanel.add(PatientSearchPanel, java.awt.BorderLayout.WEST);

        getContentPane().add(SecondPanel, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void add(AgendaPanel ap) {
        this.ap=ap;
        jPanel1.removeAll();
        jPanel1.add(ap, BorderLayout.CENTER);
        this.pack();
    }

    public void add(DMR dmr) {
        this.dmr=dmr;
        jPanel1.removeAll();
        jPanel1.add(dmr, BorderLayout.CENTER);
        this.pack();
        this.repaint();
    }
    private void DMRTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DMRTableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DMRTableKeyPressed

    private void DMRTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DMRTableMouseClicked
        int row = DMRTable.getSelectedRow();
        if (searchResult != null && row >= 0 && row < searchResult.size()) {
            controler.setCurrentPatient(searchResult.get(row));
            add(new DMR(controler));
            /*ouvre le DMR du patient selectionne*/
        }
    }//GEN-LAST:event_DMRTableMouseClicked

    private void SearchPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPatientButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchPatientButtonActionPerformed

    private void SearchPatientFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchPatientFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            searchResult = controler.getSir().chercherPatient(SearchPatientField.getText());//recherche les patients
            int nbPatient = searchResult.size();
            /*efface le tableau*/

            if (SearchPatientField.getText().isEmpty() || searchResult.isEmpty()) {
                DMRTable.setValueAt("Faire une recherche", 0, 0);
            } else {
                /*création et remplissage du tableau*/
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Nom");
                model.addColumn("Identifiant");
                model.setRowCount(nbPatient);
                DMRTable.setModel(model);
                /*remplit les lignes*/
                for (int i = 0; i < nbPatient; i++) {
                    DMRTable.setValueAt(searchResult.get(i).getNomUsuel(), i, 0);
                    DMRTable.setValueAt(searchResult.get(i).getIdPatient(), i, 1);
                }
            }
        }
    }//GEN-LAST:event_SearchPatientFieldKeyPressed

    private void SearchPatientFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPatientFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchPatientFieldActionPerformed

    private void SearchPatientButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchPatientButtonMouseClicked
        searchResult = controler.getSir().chercherPatient(SearchPatientField.getText());//recherche les patients
        int nbPatient = searchResult.size();
        /*efface le tableau*/
        if (SearchPatientField.getText().isEmpty() || searchResult.isEmpty()) {
            DMRTable.setValueAt("Faire une recherche", 0, 0);
        } else {
            /*création et remplissage du tableau*/
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Nom");
            model.addColumn("Identifiant");
            model.setRowCount(nbPatient);
            DMRTable.setModel(model);
            /*remplit les lignes*/
            for (int i = 0; i < nbPatient; i++) {
                DMRTable.setValueAt(searchResult.get(i).getNomUsuel(), i, 0);
                DMRTable.setValueAt(searchResult.get(i).getIdPatient(), i, 1);
            }
        }
    }//GEN-LAST:event_SearchPatientButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Accueil a = new Accueil();
                a.pack();
                a.setVisible(true);
                a.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            }
        });
    }

    public void SearchPatientFieldMouseClicked(java.awt.event.MouseEvent evt) {
        SearchPatientField.selectAll();
        //.setText("");
    }

    public void CloseDMR() {
        jPanel1.removeAll();
        jPanel1.add(new AgendaPanel(controler), BorderLayout.CENTER);
        /*ouvre le DMR du patient selectionne*/
        this.pack();
        this.repaint();
    }

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DMRLabel;
    private javax.swing.JTable DMRTable;
    private javax.swing.JPanel PatientSearchPanel;
    private javax.swing.JScrollPane ScrollDMR;
    private javax.swing.JButton SearchPatientButton;
    private javax.swing.JTextField SearchPatientField;
    private javax.swing.JPanel SecondPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the ap
     */
    public AgendaPanel getAp() {
        return ap;
    }

    /**
     * @return the dmr
     */
    public DMR getDmr() {
        return dmr;
    }

}
